export default async function handler(req, res) {
    if (req.method !== "POST") {
      return res.status(405).json({ error: "–ú–µ—Ç–æ–¥ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è" });
    }
  
    const {
      fullName,
      phone,
      email,
      additionalPhone,
      comment,
      deliveryMethodId,
      deliveryAddress,
      cart,
      totalPrice,
    } = req.body;
  
    if (!fullName || !phone || !email || !cart.length) {
      return res.status(400).json({ error: "–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è" });
    }
  
    const CLIENT_ID = "af410264-6c80-439d-9740-a8bd26c6029b";
    const CLIENT_SECRET = "CkZ4rSX1ysrYmLaXRkobjYaCrvNhOgiq3NDRttqZ8YHCjHBGpQf1ve2eA9FCJrMZ";
    const REDIRECT_URI = "https://paketi.kz";
    const AUTH_CODE = "def50200e4b13..."; // –ü–æ–¥—Å—Ç–∞–≤—å –∞–∫—Ç—É–∞–ª—å–Ω—ã–π –∫–æ–¥ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    const SUBDOMAIN = "your-subdomain"; // –¢–≤–æ–π —Å—É–±–¥–æ–º–µ–Ω –≤ amoCRM
  
    try {
      // üîπ 1. –ü–æ–ª—É—á–∞–µ–º access token
      const tokenResponse = await fetch(`https://${SUBDOMAIN}.amocrm.ru/oauth2/access_token`, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          client_id: CLIENT_ID,
          client_secret: CLIENT_SECRET,
          grant_type: "authorization_code",
          code: AUTH_CODE,
          redirect_uri: REDIRECT_URI,
        }),
      });
  
      const tokenData = await tokenResponse.json();
  
      if (!tokenData.access_token) {
        return res.status(500).json({ error: "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å access token" });
      }
  
      const accessToken = tokenData.access_token;
  
      // üîπ 2. –°–æ–∑–¥–∞–µ–º –∑–∞–∫–∞–∑ (–ª–∏–¥) –≤ amoCRM
      const orderData = {
        name: `–ó–∞–∫–∞–∑ –æ—Ç ${fullName}`,
        price: totalPrice,
        _embedded: {
          contacts: [
            {
              first_name: fullName.split(" ")[0],
              last_name: fullName.split(" ")[1] || "",
              custom_fields_values: [
                { field_code: "PHONE", values: [{ value: phone }] },
                { field_code: "EMAIL", values: [{ value: email }] },
              ],
            },
          ],
          notes: [
            {
              note_type: "common",
              params: {
                text: `–§–ò–û: ${fullName}\n–¢–µ–ª–µ—Ñ–æ–Ω: ${phone}\n–î–æ–ø. —Ç–µ–ª–µ—Ñ–æ–Ω: ${additionalPhone || "–ù–µ—Ç"}\nEmail: ${email}\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: ${comment || "–ù–µ—Ç"}\n–°–ø–æ—Å–æ–± –¥–æ—Å—Ç–∞–≤–∫–∏: ${deliveryMethodId}\n–ê–¥—Ä–µ—Å: ${deliveryAddress || "–ù–µ —É–∫–∞–∑–∞–Ω"}\n–°—É–º–º–∞: ${totalPrice} ‚Ç∏`,
              },
            },
          ],
        },
      };
  
      const orderResponse = await fetch(`https://${SUBDOMAIN}.amocrm.ru/api/v4/leads`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
          Authorization: `Bearer ${accessToken}`,
        },
        body: JSON.stringify([orderData]),
      });
  
      const orderResult = await orderResponse.json();
  
      res.status(200).json({ success: "–ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!", order: orderResult });
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞:", error);
      res.status(500).json({ error: "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ amoCRM" });
    }
  }
  